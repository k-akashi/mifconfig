#!/bin/sh

if=$1
addr=""
mask=""
router=""

# argment check
if [ $# = 0 ]; then
    /usr/sbin/networksetup -listnetworkserviceorder
    exit 0
fi

# interface name resolv
en=`/usr/sbin/networksetup -listnetworkserviceorder | grep ${if}`
en=`echo ${en} | awk '{gsub(",", "", $3); print $3}'`
/usr/sbin/networksetup -getinfo ${en} >> /dev/null
if [ $? != 0 ]; then
    if [ "$2" = "create" || "$2" = "plumb" ]; then
        shift;
        if ["$2" = "vlan" ]; then
            shift;
            vlanid=$2;
            if [ "$3" = "vlandev" ]; then
                shift;
                vlandev=$3;
                /usr/sbin/networksetup -createVLAN ${en} ${vlandev} ${vlanid} 
            else
                echo "mifconfig: interface ${en} does not exist"
                exit 1;
            fi
        else
            echo "mifconfig: interface ${en} does not exist"
        fi
    elif [ "$2" = "delete" || "$2" = "unplumb" ]; then
        shift;
        if ["$2" = "vlan" ]; then
            shift; 
            vlanid=$2;
            if [ "$3" = "vlandev" ]; then
                shift;
                vlandev=$3;
                /usr/sbin/networksetup -deleteVLAN ${en} ${vlandev} ${vlanid} 
            else
                echo "mifconfig: interface ${en} does not exist"
                exit 1;
            fi  
        else
            echo "mifconfig: interface ${en} does not exist"
        fi
    else
        echo "mifconfig: interface ${en} does not exist";
        exit 1;
    fi
fi

# Internet Protocol Version(4 or 6)
if [ "$2" = "inet" ]; then
    shift;
    addr=$2;
    addrv="inet";
elif [ "$2" = "inet6" ]; then
    shift;
    addr=$2;
    addrv="inet6";
else
    addr=$2;
    addrv="inet";
fi

# Default Gateway
#if [ "$3" != "" ]; then
#    router=$3;
#fi

# subnetmask calulation (for v4)
if [ "${addrv}" = "inet" ]; then
    mask=`echo ${addr} |
        awk -F"/" '{
            prefix = int($2 / 8);
            mask = 8 - ($2 % 8);
            for(i = 1; i <= prefix; i++) {
                subnet[i] = "255";
            }
            prefix++;
            subnet[prefix] = 256 - (2^mask);
            prefix++;
            if(prefix <= 4) {
                for(i = prefix; i <= 4; i++) {
                    subnet[i] = "0";
                }
            }
            subnetmask = subnet[1] "." subnet[2] "." subnet[3] "." subnet[4];
            print subnetmask;
        }'`
    addr=`echo ${addr} | 
        awk -F"/" '{
            split($1, ip, ".");
            for(i = 1; i <= 4; i++) {
                if(255 <= int(ip[i])){ 
                    print "Invalid Argment";
                    exit 1;
                } 
            } 
            print $1;
        }'`
    if [ "${mask}" != "0.0.0.0" ]; then
        continue;
    elif [ "$3" = "netmask" ]; then
        shift;
        mask=$3;
    else
        mask=$3;
    fi
fi

# Print Interface Value
if [ $# = 1 ]; then
    /usr/sbin/networksetup -getinfo ${en}
fi

# Setting Interface 
if [ $# != 1 ]; then
    if [ "${addrv}" = "inet" ]; then
        /usr/sbin/networksetup -setmanual ${en} ${addr} ${mask} ${router}
    elif [ "${addrv}" = "inet6" ]; then
        echo "IPv6 configuration not implimented";
    fi
fi

exit 0;
